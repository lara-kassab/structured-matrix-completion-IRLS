%% -------------------- SET UP THE PROBLEM ------------------- %%


% ------------------------ KARTHIK MOHAN, EE, UW. --------------- %
% ------------------------ LAST UPDATE: 8/27/2012 --------------- %



% CHOOSE DATA TYPE - SYNTHETIC DATA OR USER-INPUT DATA

type = 1; % CHOOSE 1 for testing on synthetic data.
          % CHOOSE 2 if you have your own data.
          
          
% PROBLEM SET-UP FOR SYNTHETIC DATA

if  type == 1
h = 1; % CHOOSE 1 for EASY problem instances
       % CHOOSE 2 FOR HARD problem instances
       
ins = 9; % CHOOSE PROBLEM INSTANCE: ENTER an integer between 1 and 9
         % SEE "Probinstances.m" for further details.
           
[m,n,sr,p,r,rmax,fr,eta,svditer,incr,niter] = Probinstances(h,ins);           
           
nrg = 1; % Enter the # random generations of the data required to
         % average the results        
         
end;


% PROBLEM SET-UP FOR USER-INPUT DATA

if type == 2
    m = 10; % #rows in the matrix to be comlpeted.
    n = 10; % #columns in the matrix to be completed.
    r = 3; %An estimate of the rank of the true matrix
    nrg = 1; % Enter the # random generations of the data required to
             % average the results   
    % Load USER data
    
    % NOTE:
    % Create a data matrix M.mat which has the following format: 
    % "The matrix M.mat has 3 columns. The first two columns denote the row-index and column-index.
    %  The last column has the values of matrix M at the row-column indices specified in the first two columns." 
    
    existence = exist('M.mat'); % Check for existence of the DATA matrix.
    if existence == 2
    load('M.mat');
    else
    fprintf('\n\n You have not yet added the input matrix M.mat to the current folder.\n Please do so and run the code again. \n');
    end;
    non_zero = size(M,1);
    sr = non_zero/(n*n);
    p = non_zero; % # Measurements
    rmax = ceil(n*(1 - sqrt(1 - sr)));
   
end;

q = input('\n sIRLS-q: Choose a q between 0 and 1: ');
while(q < 0 || q > 1)
    q = input('\n Enter a real number between 0 and 1:  ');
end;

    
 

gam0 = 1e-2;
gammin = 1e-10;
tol = 1e-3;    
    
end;